{"version":3,"sources":["api-util.js"],"names":["getAllProducts","productQuery","sanityClient","fetch","products","getAllBlogs","blogQuery","blogs","searchSanity","query","toLowerCase","sanityQuery","results","map","post","type"],"mappings":";;;;;;;;;AACA;;;;;;;;AAGA;AACO,SAAeA,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,UAAAA,YADD;AAAA;AAAA,0CAIkBC,qBAAaC,KAAb,CAAmBF,YAAnB,CAJlB;;AAAA;AAICG,UAAAA,QAJD;AAAA,2CAKEA,QALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAQP;;;AACO,SAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,UAAAA,SADD;AAAA;AAAA,0CAIeJ,qBAAaC,KAAb,CAAmBG,SAAnB,CAJf;;AAAA;AAICC,UAAAA,KAJD;AAAA,4CAKEA,KALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAUP;;;AACO,SAAeC,YAAf,CAA4BC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAGL,cAAGA,KAAK,CAACC,WAAN,OAAwB,MAA3B,EAAkC;AAChCC,YAAAA,WAAW,uEAAX;AAKD,WAND,MAMO;AACLA,YAAAA,WAAW,kDAAwCF,KAAxC,uDAAX;AAKD;;AAfI;AAAA,0CAiBiBP,qBAAaC,KAAb,CAAmBQ,WAAnB,CAjBjB;;AAAA;AAiBCC,UAAAA,OAjBD;AAAA,4CAkBEA,OAAO,CAACC,GAAR,CAAY,UAACC,IAAD;AAAA;AACjBC,cAAAA,IAAI,EAAE;AADW,eAEdD,IAFc;AAAA,WAAZ,CAlBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["\nimport { sanityClient } from '@/lib/dist/sanity.dev';\n\n\n//Fetch Blog data from Sanity\nexport async function getAllProducts() {\n  const productQuery = `*[_type == \"product\"]{  \n    \"slugCurrent\":slug.current,\n  }`\n  const products = await sanityClient.fetch(productQuery)\n  return products;\n}\n\n//Fetch Blog data from Sanity\nexport async function getAllBlogs() {\n  const blogQuery = `*[_type == \"blog\"]{  \n    \"slugCurrent\":slug.current,\n  }`\n  const blogs = await sanityClient.fetch(blogQuery)\n  return blogs;\n}\n\n\n\n//Fetch Search Results from Sanity \nexport async function searchSanity(query){\n  let sanityQuery;\n\n  if(query.toLowerCase() === \"blog\"){\n    sanityQuery = `*[_type == \"blog\"]{\n      title,\n      slug,\n      tag\n    }`\n  } else {\n    sanityQuery = `*[_type == \"blog\" && title match \"${query}*\"]{\n      title,\n      slug,\n      tag\n    }`\n  }\n\n  const results = await sanityClient.fetch(sanityQuery);\n  return results.map((post) => ({\n    type: 'blogPost',\n    ...post,\n  }));\n\n}\n\n"],"file":"api-util.dev.js"}