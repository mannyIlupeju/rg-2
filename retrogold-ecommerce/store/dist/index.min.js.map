{"version":3,"sources":["index.js"],"names":["_toolkit","require","initialState","cart","totalPrice","totalQuantity","cartSlice","createSlice","name","reducers","initializeCart","state","action","payload","map","item","id","reduce","total","quantity","price","existingItem","find","removingItem","filter","addToCart","findIndex","existingItemIndex","push","value","splice","reducer","actions","onRemove","toggleCartItemQuantity"],"mappings":"oLAAA,IAAAA,SAAAC,QAAA,+uBAGA,IAAMC,aAAe,CACjBC,KAAM,GACNC,WAAY,EACZC,cAAe,GAIbC,WAAY,EAAAN,SAAAO,aAAY,CAC1BC,KAAM,OACNN,aAAAA,aACAO,SAAU,CACNC,eAAgB,SAACC,EAAOC,GAX1BV,EAAYC,KAAGS,EAAAC,QAAAC,IAAA,SAAAC,GAAA,MAAA,CAAAC,GAAAD,KAGjBV,EAAeA,cAAAM,EAAAR,KAAAc,OAAA,SAAAC,EAAAH,GAAA,OAAAG,EAAAH,EAAAI,UAAA,GAGnBR,EAAAP,WAAAO,EAAAR,KAAAc,OAAA,SAAAC,EAAAH,GAAA,OAAAG,EAAAH,EAAAK,MAAAL,EAAAI,UAAA,IACMb,UAAY,SAAAK,EAAAC,GACR,IADoBS,EAAAV,EAAAR,KAAAmB,KAAA,SAAAP,GAAA,OAAAA,EAAAC,KAAAJ,EAAAC,QAAAG,KAE1Bd,EACUmB,EAAAF,WAEIhB,EAANA,KAAaS,KAAPT,cAAAA,GAAcU,EAAYA,QAA1BV,CAA0BY,SAAIH,EAAAC,QAAAM,UAAA,KAChCH,EAAID,cAAAA,EAAAA,KAAAA,OAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,EAAAA,UAAAA,GADiCJ,EAALP,WAAAO,EAAAR,KAAAc,OAAA,SAAAC,EAAAH,GAAA,OAAAG,EAAAH,EAAAK,MAAAL,EAAAI,UAAA,IAGpCR,SAAMN,SAAAA,EAANO,GAAwC,IAAAW,EAA8BJ,EAAAA,KAA9BG,KAAA,SAAAP,GAAA,OAAAA,EAAAC,KAAAJ,EAAAC,QAAAG,KAAxCO,IACKZ,EAACP,KAANO,EAAwBR,KAALqB,OAAA,SAAAT,GAAkB,OAAAA,EAACG,KAAOH,EAARC,KAAAL,EAAiBO,WAAcE,EAAQL,KAAKI,OAAAA,SAA5CD,EAAAH,GAA4CI,OAA5CD,EAAAH,EAAAK,MAAAL,EAAAI,UAAA,KAE1CM,uBAAW,SAAAd,EAACA,GACX,IAAMU,EAAqBlB,EAAKmB,KAAKI,UAAAX,SAAIA,GAAJA,OAAIA,EAAAC,KAAAJ,EAAAC,QAAAG,KAAA,IAAuBH,IAAvBc,EAAuBd,CAAhE,IAAAQ,EAAAV,EAAAR,KAAAwB,GAEI,QAAAN,EAAAA,QAAaF,MADjBE,EAEOF,WACiBP,QAATgB,EAAXf,QAAAgB,QAA6DV,EAAzBA,EAAiBN,SAArDQ,EAAAF,WAEEd,EAAAA,KAANyB,OAA4B3B,EAAY,IACrBQ,EAAnBN,cAAAM,EAAAR,KAAAc,OAAA,SAAAC,EAAAH,GAAA,OAAAG,EAAAH,EAAAI,UAAA,GAhBMR,EAAAP,WAAAO,EAAAR,KAAAc,OAAA,SAAAC,EAAAH,GAAA,OAAAG,EAAAH,EAAAK,MAAAL,EAAAI,UAAA,QAsBHR,OAAMP,EAAAA,SAAAA,gBAAaO,CAAAA,QAAWM,UAAOc,6BACvCzB,UAAA0B,QAAAP,6BAAAA,UAAAQ,4BAAAA,SAAAC,0CAAAA,uBAAAxB,kCAAAA,8KAEHwB","file":"index.min.js","sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit'\n\n//Set the state\nconst initialState = {\n    cart: [],\n    totalPrice: 0,\n    totalQuantity: 1\n};\n\n//Create Slice and align it with the cart so it's specific to working on the Cart\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        initializeCart: (state, action) => {\n            state.cart = action.payload.map(item => ({\n                id: item, \n            }));\n            state.totalQuantity = state.cart.reduce((total, item) => total + item.quantity, 0);\n            state.totalPrice = state.cart.reduce((total, item) => total + (item.price * item.quantity), 0);\n        },\n       addToCart: (state, action) => {\n        const existingItem = state.cart.find(item => item.id === action.payload.id);\n        if(existingItem){\n            existingItem.quantity++\n        } else {\n            state.cart.push({...action.payload, quantity: action.payload.quantity || 1})\n        }\n        state.totalQuantity = state.cart.reduce((total, item) => total + item.quantity, 0)\n        state.totalPrice = state.cart.reduce((total, item)=> total + (item.price * item.quantity), 0)\n       },\n       onRemove: (state, action) => {\n        const removingItem = state.cart.find(item => item.id === action.payload.id);\n        if(removingItem){\n           state.cart = state.cart.filter(item => item.id !== removingItem.id)\n           state.totalPrice = state.cart.reduce((total, item) => total + (item.price * item.quantity), 0)\n        } \n       },\n      toggleCartItemQuantity: (state, action) => {\n       const existingItemIndex = state.cart.findIndex((item) => item.id === action.payload.id);\n       if (existingItemIndex !== -1) {\n        const existingItem = state.cart[existingItemIndex];\n\n        // Increase or decrease quantity\n        if (action.payload.value === 'inc') {\n            existingItem.quantity++;\n        } else if (action.payload.value === 'dec') {\n            if (existingItem.quantity > 1) {\n                existingItem.quantity--;\n            } else {\n                // Remove item from cart if quantity is 1 and 'dec' is requested\n                state.cart.splice(existingItemIndex, 1);\n            }\n        }\n\n        // Update totalQuantity and totalPrice\n        state.totalQuantity = state.cart.reduce((total, item) => total + item.quantity, 0);\n        state.totalPrice = state.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n       }\n      }\n\n       \n    },\n});\n\n\n//Create the store\nconst store = configureStore({ reducer: cartSlice.reducer });\n\n\nexport const { addToCart, onRemove, toggleCartItemQuantity, initializeCart } = cartSlice.actions;\n\nexport default store; "]}