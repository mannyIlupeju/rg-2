{"version":3,"sources":["index.js"],"names":["_toolkit","require","initialState","cart","totalPrice","totalQuantity","cartSlice","createSlice","name","reducers","addToCart","state","action","existingItem","find","item","id","payload","quantity","push","reduce","total","price","removingItem","existingItemIndex","findIndex","value","splice","store","configureStore","reducer","actions"],"mappings":"6JAAA,IAAAA,SAAAC,QAAA,+uBAGA,IAAMC,aAAe,CACjBC,KAAM,GACNC,WAAY,EACZC,cAAe,GAGbC,WAAY,EAAAN,SAAAO,aAAY,CAC1BC,KAAM,OACNN,aAAAA,aACAO,SAAU,CACPC,UAAW,SAACC,EAAOC,GAClB,IAAMC,EAAeF,EAAMR,KAAKW,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAOK,QAAQD,KAX1Ed,EAAeW,EAAAK,WAGjBb,EAAeF,KAAAgB,KAAfd,cAAAA,GAAeO,EAAAK,QAAfZ,CAAea,SAAAN,EAAAK,QAAAC,UAAA,KAGbZ,EAASD,cAAGM,EAAAR,KAAAiB,OAAY,SAAAC,EAAAN,GAAA,OAAAM,EAAAN,EAAAG,UAAA,GACpBP,EADoBP,WAAAO,EAAAR,KAAAiB,OAAA,SAAAC,EAAAN,GAAA,OAAAM,EAAAN,EAAAO,MAAAP,EAAAG,UAAA,IAG1BT,SAAU,SAAAE,EAAAC,GACPF,IAASa,EAAEZ,EAACA,KAADG,KAAQF,SAAAA,GAAW,OAAAG,EAAAC,KAAAJ,EAAAK,QAAAD,KACvBH,IAAmCF,EAAII,KAAAJ,EAAYC,KAAOK,OAAQD,SAAAA,GAA/B,OAAAD,EAAAC,KAAAO,EAAAP,KAAzCL,EAAAP,WAAAO,EAAAR,KAAAiB,OAAA,SAAAC,EAAAN,GAAA,OAAAM,EAAAN,EAAAO,MAAAP,EAAAG,UAAA,KAEIL,uBAAA,SAAAF,EAAAC,GADJ,IAEOY,EAAAb,EAAAR,KAAAsB,UAAA,SAAAV,GAAA,OAAAA,EAAAC,KAAAJ,EAAAK,QAAAD,KACHL,IAAA,IAAAA,EAAA,CAAoCO,IAAAA,EAAiBD,EAAQC,KAAAA,GAkBpC,QAAzBN,EAAOK,QAAQS,MAhBbrB,EAANa,WAAwC,QAAiBG,EAAQN,QAAKG,QAAtE,EAAAL,EAAAK,SACMd,EAAaO,WATbA,EAAAR,KAAAwB,OAAAH,EAAA,IAoCNb,EAAMN,cAAgBM,EAAMR,KAAKiB,OAAO,SAACC,EAAON,GAAR,OAAiBM,EAAQN,EAAKG,UAAU,GAvBhFP,EAAGY,WAAaZ,EAAAR,KAAAiB,OAAA,SAAAC,EAAAN,GAAA,OAAAM,EAAAN,EAAAO,MAAAP,EAAAG,UAAA,QAbVU,OAAA,EAAA5B,SAAA6B,gBAAA,CAAAC,QAAAxB,UAAAwB,6BAmByCf,UAADgB,QAAzCP,6BAAAA,UAAAA,4BAAAA,SAA0BrB,0CAAAA,gJAAhCyB","file":"index.min.js","sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit'\n\n\nconst initialState = {\n    cart: [],\n    totalPrice: 0,\n    totalQuantity: 1\n};\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n       addToCart: (state, action) => {\n        const existingItem = state.cart.find(item => item.id === action.payload.id);\n        if(existingItem){\n            existingItem.quantity++\n        } else {\n            state.cart.push({...action.payload, quantity: action.payload.quantity || 1})\n        }\n        state.totalQuantity = state.cart.reduce((total, item) => total + item.quantity, 0)\n        state.totalPrice = state.cart.reduce((total, item)=> total + (item.price * item.quantity), 0)\n       },\n       onRemove: (state, action) => {\n        const removingItem = state.cart.find(item => item.id === action.payload.id);\n        if(removingItem){\n           state.cart = state.cart.filter(item => item.id !== removingItem.id)\n           state.totalPrice = state.cart.reduce((total, item) => total + (item.price * item.quantity), 0)\n        } \n       },\n      toggleCartItemQuantity: (state, action) => {\n       const existingItemIndex = state.cart.findIndex((item) => item.id === action.payload.id);\n       if (existingItemIndex !== -1) {\n        const existingItem = state.cart[existingItemIndex];\n\n        // Increase or decrease quantity\n        if (action.payload.value === 'inc') {\n            existingItem.quantity++;\n        } else if (action.payload.value === 'dec') {\n            if (existingItem.quantity > 1) {\n                existingItem.quantity--;\n            } else {\n                // Remove item from cart if quantity is 1 and 'dec' is requested\n                state.cart.splice(existingItemIndex, 1);\n            }\n        }\n\n        // Update totalQuantity and totalPrice\n        state.totalQuantity = state.cart.reduce((total, item) => total + item.quantity, 0);\n        state.totalPrice = state.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n       }\n      }\n\n       \n    },\n});\n\nconst store = configureStore({ reducer: cartSlice.reducer });\n\nexport const { addToCart, onRemove, toggleCartItemQuantity } = cartSlice.actions;\n\nexport default store; "]}