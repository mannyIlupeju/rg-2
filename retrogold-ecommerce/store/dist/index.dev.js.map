{"version":3,"sources":["index.js"],"names":["initialState","cart","totalPrice","totalQuantity","cartSlice","name","reducers","initializeCart","state","action","payload","map","item","price","priceV2","quantity","reduce","total","node","addToCart","existingItemIndex","findIndex","id","push","onRemove","removingItem","find","filter","toggleCartItemQuantity","updatedCart","existingItem","value","splice","persistConfig","key","storage","persistedReducer","reducer","store","persistor","actions"],"mappings":"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","sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit'\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\n//Set the state\nconst initialState = {\n    cart: [],\n    totalPrice: 0,\n    totalQuantity: 1\n};\n\n//Create Slice and align it with the cart so it's specific to working on the Cart\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        initializeCart: (state, action) => {\n            state.cart = action.payload.map(item => ({\n                ...item,\n               price: item.priceV2,\n               quantity: item.quantity || 0 \n            }));\n            state.totalQuantity = state.cart.reduce((total, item) => total + item.node.quantity, 0);\n            state.totalPrice = state.cart.reduce((total, item) => total + (item.price * item.quantity), 0);\n        },\n       addToCart: (state, action) => {\n        const existingItemIndex = state.cart.findIndex(item => item.id === action.payload.id);\n        if(existingItemIndex !== -1){\n            state.cart[existingItemIndex].quantity += action.payload.quantity || 1;\n        } else {\n            state.cart.push({...action.payload, quantity: action.payload.quantity || 1})\n        }\n        state.totalQuantity = state.cart.reduce((total, item) => total + item.node.quantity, 0)\n        state.totalPrice = state.cart.reduce((total, item)=> total + (item.price * item.quantity), 0)\n       },\n       \n       onRemove: (state, action) => {\n        const removingItem = state.cart.find(item => item.node.id === action.payload.id);\n        if(removingItem){\n           state.cart = state.cart.filter(item => item.node.id !== removingItem.node.id)\n           state.totalPrice = state.cart.reduce((total, item) => total + (item.node.price * item.node.quantity), 0)\n        } \n       },\n\n      toggleCartItemQuantity: (state, action) => {\n       const existingItemIndex = state.cart.findIndex((item) => item.id === action.payload.id);\n       if (existingItemIndex !== -1) {\n        const updatedCart = [...state.cart]\n        const existingItem = updatedCart[existingItemIndex];\n\n        // Increase or decrease quantity\n        if (action.payload.value === 'inc') {\n            existingItem.quantity++;\n        } else if (action.payload.value === 'dec') {\n            if (existingItem.quantity > 1) {\n                existingItem.quantity--;\n            } else {\n                // Remove item from cart if quantity is 1 and 'dec' is requested\n                updatedCart.splice(existingItemIndex, 1);\n            }\n        }\n\n        state.cart = updatedCart;\n\n        // Update totalQuantity and totalPrice\n        state.totalQuantity = updatedCart.reduce((total, item) => total + item.quantity, 0);\n        state.totalPrice = updatedCart.reduce((total, item) => total + item.price * item.quantity, 0);\n       }\n      }\n\n       \n    },\n});\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    // Add more configurations like whitelist or blacklist if needed\n};\n\nconst persistedReducer = persistReducer(persistConfig, cartSlice.reducer);\n\n\n//Create the store\n// const store = configureStore({ reducer: cartSlice.reducer });\nconst store = configureStore({\n    reducer: persistedReducer,\n});\n\nexport const persistor = persistStore(store);\n\nexport const { addToCart, onRemove, toggleCartItemQuantity, initializeCart } = cartSlice.actions;\n\nexport default store; "],"file":"index.dev.js"}