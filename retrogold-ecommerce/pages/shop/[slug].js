import React, {useState} from 'react';
import Head from 'next/head'
import { sanityClient } from '/lib/sanity'
import Navigation from '@/components/Shared/Navigation'
import { urlFor } from '@/lib/sanity';
import Footer from '@/components/Shared/Footer/footer'
import {FaChevronRight, FaChevronLeft} from 'react-icons/fa'
import Accordion from '@/components/Shared/Accordion'
import Quantitycounter from '@/components/Shared/quantityCounter';
import AddtoCart from '@/components/Shared/AddtoCart';
import Relatedproducts from '@/components/Shared/RelatedProducts';
import { FaMinus, FaPlus } from 'react-icons/fa';
import { useGlobalContext } from '@/ Context/context';

// to-do-list
// responsive design for the page
// make quantity counter, carousel and add to cart reusable components




const productDetails = ({data}) => {
 

  const {productDetail} = data
  const {allProduct} = data
  
  const [currentIndex, setCurrentIndex] = useState(0)

  //product Detail destructure
  const desc = productDetail.productDescription.map((x)=> x.children[0].text)
 
  //shipping Info destructure
  const shipping = productDetail.shippingReturns[0].children
  const shippingInfo = shipping.map((x)=>{
    return (x.text)
  })
  const {images} = productDetail
  


 
  

  //Carousel Functions 
  const prevImage = () => { 
    let firstSlide = currentIndex === 0
    const newSlides = firstSlide ? images.length-1 : currentIndex - 1
    setCurrentIndex(newSlides)
  }
  const nextImage = () => {
    let lastSlide = currentIndex === images.length - 1
    const newSlide = lastSlide ? 0 : currentIndex + 1
    setCurrentIndex(newSlide)
  }








  return (
    <>
      <Head>
        <title>{productDetail.productName}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />

      </Head>
      <Navigation/>
      <main>
        <div className="bg-white productDetailFonts">
          <div className="container mx-auto grid grid-cols-1 md:grid-cols-2 md:gap-16 justify-center py-16 pb-20 ">
            <div className="flex flex-col flex-col-reverse md:flex-row justify-end md:gap-4 overflow-hidden">
              <div>
                <div className="flex md:flex-col items-center gap-4 col-start-1">
                    {images.map((x)=>{
                    return (
                        <div className="sideProductImage" keys={productDetail._id}>
                          <img src={urlFor(x.asset._ref)} alt=" " className="sideProductImage"/>
                        </div>
                      )
                    })}          
                  </div>
                  </div>
                <div>
                  
             
                {/* main image that has carousel function */}
                <div>
                  <img src={urlFor(images[currentIndex].asset._ref)} alt=" " className="mainProductImage" />
                  <div className="flex justify-between p-2 relative bottom-44 cursor-pointer">
                    <FaChevronLeft size="1.3rem" onClick={prevImage} className="shopCarouselArrow" />
                    <FaChevronRight size="1.3rem" onClick={nextImage} className="shopCarouselArrow"/>
                  </div>
                </div>
               
                  
              </div>
            </div>

            
            <div className="container text-zinc-700 h-fit row-start-2 lg:col-start-2 lg:row-start-1">
              <p className="font-bold text-sm">{productDetail.brandName}</p>
              <h1 className="font-semibold text-xl productName">{productDetail.productName}</h1>
              <p className="font-semibold">CDN ${productDetail.price}</p>

              <div className="border-t-2 border-gray-300 mt-8 w-fit">
                <div className="mt-4">
                  <p className="text-sm font-bold">Select Option</p>

                  <Quantitycounter/>
                  <AddtoCart/>

                </div>
              </div>

              <div className="mt-8 flex flex-col gap-4 text-sm">
                <Accordion title="Product Description" content={desc} id="productDesc"/>
                <Accordion title="Shipping & Returns" content={shippingInfo} id="shippingInfo"/>
              </div>
            </div>



          </div>

          <Relatedproducts data={data}/>
          
        </div>
      </main>
      <Footer/>
    </>
  );
}


export default productDetails






const paramQuery = `*[_type == "product" && defined(slug.current)]{
  "params": {
    "slug": slug.current
  }
}`


export async function getStaticPaths() {
 const paths = await sanityClient.fetch(paramQuery)

  return {
    paths,
    fallback: false,
  }
 
}


const productDetailQuery = `*[_type == 'product' && slug.current == $slug][0]{
  images[],
  brandName,
  mainImage,
  productDescription,
  shippingReturns,
  productName,
  price, 
  slug,
  _id,

}`

const allProductsQuery = `*[_type == 'product']{
  productName,
  mainImage,
  brandName,
  price,
  slug,
  _id,
  shortDescription
}`

export async function getStaticProps({ params }) {
 const {slug} = params;
 const productDetail = await sanityClient.fetch(productDetailQuery, {slug})

 const allProduct = await sanityClient.fetch(allProductsQuery)




 return {
   props: {
     data: {productDetail, allProduct}
   }
 }
}



