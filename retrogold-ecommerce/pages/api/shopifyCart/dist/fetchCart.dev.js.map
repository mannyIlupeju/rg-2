{"version":3,"sources":["fetchCart.js"],"names":["handler","req","res","method","query","process","env","SHOPIFY_DOMAIN","headers","SHOPIFY_PUB","body","JSON","stringify","variables","cartId","response","ok","Error","status","json","cartData","console","log","props","error"],"mappings":";;;;;;;AAAA;;;;AAEe,SAAeA,OAAf,CAAwBC,GAAxB,EAA6BC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACRD,GAAG,CAACE,MAAJ,KAAe,MADP;AAAA;AAAA;AAAA;;AAAA;AAIGC,UAAAA,KAJH,s9DA0EH;;AA1EG;AAAA,0CA4EoB,6CAAiBC,OAAO,CAACC,GAAR,CAAYC,cAA7B,gCAAwE;AAC3FJ,YAAAA,MAAM,EAAE,MADmF;AAE3FK,YAAAA,OAAO,EAAE;AACL,8BAAgB,kBADX;AAEL,mDAAqCH,OAAO,CAACC,GAAR,CAAYG;AAF5C,aAFkF;AAM3FC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,cAAAA,KAAK,EAALA,KADiB;AAEjBS,cAAAA,SAAS,EAAE;AAAEC,gBAAAA,MAAM,EAANA;AAAF;AAFM,aAAf;AANqF,WAAxE,CA5EpB;;AAAA;AA4EGC,UAAAA,QA5EH;;AAAA,cAwFEA,QAAQ,CAACC,EAxFX;AAAA;AAAA;AAAA;;AAAA,gBAyFO,IAAIC,KAAJ,+BAAiCF,QAAQ,CAACG,MAA1C,EAzFP;;AAAA;AAAA;AAAA,0CA4FoBH,QAAQ,CAACI,IAAT,EA5FpB;;AAAA;AA4FGC,UAAAA,QA5FH;AA6FHC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AA7FG,2CA8FI;AACHG,YAAAA,KAAK,EAAE;AAAEH,cAAAA,QAAQ,EAARA;AAAF;AADJ,WA9FJ;;AAAA;AAAA;AAAA;AAkGHC,UAAAA,OAAO,CAACG,KAAR,CAAc,2BAAd;AAlGG,2CAmGI;AAAED,YAAAA,KAAK,EAAE;AAAEH,cAAAA,QAAQ,EAAE;AAAZ;AAAT,WAnGJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import fetch from 'node-fetch';\n\nexport default async function handler (req, res){\n    if(req.method === \"POST\"){\n        try {\n            \n            const query = `\n            query cartQuery($cartId: ID!) {\n              cart(id: $cartId) {\n                id\n                createdAt\n                updatedAt\n                checkoutUrl\n                lines(first: 10) {\n                  edges {\n                    node {\n                      id\n                      quantity\n                      merchandise {\n                        ... on ProductVariant {\n                          id\n                          image {\n                            src\n                            altText\n                          }\n                          priceV2 {\n                            amount\n                            currencyCode\n                          }\n                          product {\n                            vendor\n                            title\n                            handle\n                          }\n                        }\n                      }\n                      attributes {\n                        key\n                        value\n                      }\n                    }\n                  }\n                }\n                attributes {\n                  key\n                  value\n                }\n                cost {\n                  totalAmount {\n                    amount\n                    currencyCode\n                  }\n                  subtotalAmount {\n                    amount\n                    currencyCode\n                  }\n                  totalTaxAmount {\n                    amount\n                    currencyCode\n                  }\n                  totalDutyAmount {\n                    amount\n                    currencyCode\n                  }\n                }\n                buyerIdentity {\n                  email\n                  phone\n                  customer {\n                    id\n                  }\n                  countryCode\n                }\n              }\n            }\n        `;\n            // Replace 'your GraphQL query here' with your actual query.\n\n            const response = await fetch(`https://${process.env.SHOPIFY_DOMAIN}/api/2023-10/graphql.json`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Shopify-Storefront-Access-Token': process.env.SHOPIFY_PUB,\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: { cartId },\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n\n            const cartData = await response.json();\n            console.log(cartData);\n            return {\n                props: { cartData },\n            };\n        } catch (error) {\n            console.error('Error fetching cart data:', error);\n            return { props: { cartData: null } };\n        }\n    }\n}"],"file":"fetchCart.dev.js"}