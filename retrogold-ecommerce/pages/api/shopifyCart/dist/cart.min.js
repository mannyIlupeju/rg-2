"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=handler;var _nodeFetch=_interopRequireDefault(require("node-fetch"));function _interopRequireDefault(n){return n&&n.__esModule?n:{default:n}}function handler(t,e){var r,a,o,u;return regeneratorRuntime.async(function(n){for(;;)switch(n.prev=n.next){case 0:if("POST"===t.method)return n.prev=1,r=t.body.productAdded,console.log(r),a={merchandiseId:id,quantity:quantity},"\n                mutation createCart($cartInput: CartInput) {\n                cartCreate(input: $cartInput) {\n                    cart {\n                    id\n                    createdAt\n                    updatedAt\n                    checkoutUrl\n                    lines(first: 10) {\n                        edges {\n                        node {\n                            id\n                            merchandise {\n                            ... on ProductVariant {\n                                id\n                            }\n                            }\n                        }\n                        }\n                    }\n                    attributes {\n                        key\n                        value\n                    }\n                    cost {\n                        totalAmount {\n                        amount\n                        currencyCode\n                        }\n                        subtotalAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalTaxAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalDutyAmount {\n                        amount\n                        currencyCode\n                        }\n                    }\n                    }\n                }\n                }\n            ",n.next=8,regeneratorRuntime.awrap((0,_nodeFetch.default)("https://".concat(process.env.SHOPIFY_DOMAIN,"/api/2023-10/graphql.json"),{method:"POST",headers:{"Content-Type":"application/json","X-Shopify-Storefront-Access-Token":process.env.SHOPIFY_PUB},body:JSON.stringify({query:"\n                mutation createCart($cartInput: CartInput) {\n                cartCreate(input: $cartInput) {\n                    cart {\n                    id\n                    createdAt\n                    updatedAt\n                    checkoutUrl\n                    lines(first: 10) {\n                        edges {\n                        node {\n                            id\n                            merchandise {\n                            ... on ProductVariant {\n                                id\n                            }\n                            }\n                        }\n                        }\n                    }\n                    attributes {\n                        key\n                        value\n                    }\n                    cost {\n                        totalAmount {\n                        amount\n                        currencyCode\n                        }\n                        subtotalAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalTaxAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalDutyAmount {\n                        amount\n                        currencyCode\n                        }\n                    }\n                    }\n                }\n                }\n            ",variables:{cartInput:{lines:a}}})}));n.next=22;break;case 8:return o=n.sent,n.next=11,regeneratorRuntime.awrap(o.json());case 11:u=n.sent,e.status(200).json(u),console.log(u),n.next=20;break;case 16:n.prev=16,n.t0=n.catch(1),console.error(n.t0),e.status(500).json({error:"Error creating cart"});case 20:n.next=24;break;case 22:e.setHeader("Allow",["POST"]),e.status(405).end("Method ".concat(t.method," Not Allowed"));case 24:case"end":return n.stop()}},null,null,[[1,16]])}
//# sourceMappingURL=cart.min.js.map
