"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=handler;var _nodeFetch=_interopRequireDefault(require("node-fetch"));function _interopRequireDefault(n){return n&&n.__esModule?n:{default:n}}function handler(e,t){var r,a,o,s,d;return regeneratorRuntime.async(function(n){for(;;)switch(n.prev=n.next){case 0:if("POST"===e.method)return n.prev=1,r=e.body,a=r.cartId,o=r.lineItems,"\n                mutation addCartLines($cartId: ID!, $lines: [CartLineInput!]!) {\n                    cartLinesAdd(cartId: $cartId, lines: $lines) {\n                        cart {\n                            id\n                            lines(first: 10) {\n                                edges {\n                                    node {\n                                        id\n                                        merchandise {\n                                            ... on ProductVariant {\n                                                id\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            cost {\n                                totalAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                subtotalAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                totalTaxAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                totalDutyAmount {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                        }\n                        userErrors {\n                            field\n                            message\n                        }\n                    }\n                }\n            ",n.next=6,regeneratorRuntime.awrap((0,_nodeFetch.default)("https://".concat(process.env.SHOPIFY_DOMAIN,"/api/2023-10/graphql.json"),{method:"POST",headers:{"Content-Type":"application/json","X-Shopify-Storefront-Access-Token":process.env.SHOPIFY_PUB},body:JSON.stringify({query:"\n                mutation addCartLines($cartId: ID!, $lines: [CartLineInput!]!) {\n                    cartLinesAdd(cartId: $cartId, lines: $lines) {\n                        cart {\n                            id\n                            lines(first: 10) {\n                                edges {\n                                    node {\n                                        id\n                                        merchandise {\n                                            ... on ProductVariant {\n                                                id\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            cost {\n                                totalAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                subtotalAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                totalTaxAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                totalDutyAmount {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                        }\n                        userErrors {\n                            field\n                            message\n                        }\n                    }\n                }\n            ",variables:{cartId:a,lines:o},message:"item added to cart"})}));n.next=20;break;case 6:return s=n.sent,n.next=9,regeneratorRuntime.awrap(s.json());case 9:d=n.sent,t.status(200).json(d),d.data&&d.data.cartLinesAdd&&d.data.cartLinesAdd.userErrors?0<d.data.cartLinesAdd.userErrors.length&&console.error("User errors:",d.data.cartLinesAdd.userErrors):console.error("Unexpected response structure:",d),n.next=18;break;case 14:n.prev=14,n.t0=n.catch(1),console.error(n.t0),t.status(500).json({error:"Error adding items to cart"});case 18:n.next=22;break;case 20:t.setHeader("Allow",["POST"]),t.status(405).end("Method ".concat(e.method," Not Allowed"));case 22:case"end":return n.stop()}},null,null,[[1,14]])}
//# sourceMappingURL=addItemToCart.min.js.map
