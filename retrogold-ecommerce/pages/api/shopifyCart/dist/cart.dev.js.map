{"version":3,"sources":["cart.js"],"names":["handler","req","res","method","body","quantity","id","price","console","log","lineItems","merchandiseId","query","process","env","SHOPIFY_DOMAIN","headers","SHOPIFY_PUB","JSON","stringify","variables","response","json","data","status","error","setHeader","end"],"mappings":";;;;;;;AAAA;;;;AAKe,SAAeA,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACRD,GAAG,CAACE,MAAJ,KAAe,MADP;AAAA;AAAA;AAAA;;AAAA;AAAA,sBAG2BF,GAAG,CAACG,IAH/B,EAGIC,QAHJ,aAGIA,QAHJ,EAGcC,EAHd,aAGcA,EAHd,EAGkBC,KAHlB,aAGkBA,KAHlB;AAIHC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBC,EAAtB;AAEMI,UAAAA,SANH,GAMe,CAAC;AACfC,YAAAA,aAAa,EAAEL,EADA;AAEfD,YAAAA,QAAQ,EAAEA;AAFK,WAAD,CANf;AAYGO,UAAAA,KAZH;AAAA;AAAA,0CA2DoB,6CAAiBC,OAAO,CAACC,GAAR,CAAYC,cAA7B,gCAAwE;AAC3FZ,YAAAA,MAAM,EAAE,MADmF;AAE3Fa,YAAAA,OAAO,EAAE;AACL,8BAAgB,kBADX;AAEL,mDAAqCH,OAAO,CAACC,GAAR,CAAYG;AAF5C,aAFkF;AAM3Fb,YAAAA,IAAI,EAAEc,IAAI,CAACC,SAAL,CAAe;AACjBP,cAAAA,KAAK,EAALA,KADiB;AAEjBQ,cAAAA,SAAS,EAAE;AAACV,gBAAAA,SAAS,EAATA;AAAD;AAFM,aAAf;AANqF,WAAxE,CA3DpB;;AAAA;AA2DGW,UAAAA,QA3DH;AAAA;AAAA,0CAuEgBA,QAAQ,CAACC,IAAT,EAvEhB;;AAAA;AAuEGC,UAAAA,IAvEH;AAwEHrB,UAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqBC,IAArB;AAxEG;AAAA;;AAAA;AAAA;AAAA;AA2EHf,UAAAA,OAAO,CAACiB,KAAR;AACAvB,UAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAACG,YAAAA,KAAK,EAAE;AAAR,WAArB;;AA5EG;AAAA;AAAA;;AAAA;AA+EPvB,UAAAA,GAAG,CAACwB,SAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB;AACAxB,UAAAA,GAAG,CAACsB,MAAJ,CAAW,GAAX,EAAgBG,GAAhB,kBAA8B1B,GAAG,CAACE,MAAlC;;AAhFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import fetch from 'node-fetch'\n\n\n\n\nexport default async function handler(req, res) {\n    if(req.method === \"POST\"){ \n        try {\n            const {quantity, id, price} = req.body;\n            console.log(quantity, id);\n            \n            const lineItems = [{\n                merchandiseId: id,\n                quantity: quantity\n                \n            }];\n\n            const query = `\n                mutation createCart($cartInput: CartInput) {\n                cartCreate(input: $cartInput) {\n                    cart {\n                    id\n                    createdAt\n                    updatedAt\n                    checkoutUrl\n                    lines(first: 10) {\n                        edges {\n                        node {\n                            id\n                            merchandise {\n                            ... on ProductVariant {\n                                id\n                            }\n                            }\n                        }\n                        }\n                    }\n                    attributes {\n                        key\n                        value\n                    }\n                    cost {\n                        totalAmount {\n                        amount\n                        currencyCode\n                        }\n                        subtotalAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalTaxAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalDutyAmount {\n                        amount\n                        currencyCode\n                        }\n                    }\n                    }\n                }\n                }\n            `;\n\n            const response = await fetch(`https://${process.env.SHOPIFY_DOMAIN}/api/2023-10/graphql.json`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Shopify-Storefront-Access-Token': process.env.SHOPIFY_PUB\n                },\n                body: JSON.stringify({\n                    query, \n                    variables: {lineItems}\n                })\n            })\n\n            const data = await response.json();\n            res.status(200).json(data)\n\n        } catch (error) {\n            console.error (error);\n            res.status(500).json({error: 'Error creating cart'})\n        }\n    } else {\n        res.setHeader('Allow', ['POST']);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}        \n"],"file":"cart.dev.js"}