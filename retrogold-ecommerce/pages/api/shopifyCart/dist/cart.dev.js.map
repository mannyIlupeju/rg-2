{"version":3,"sources":["cart.js"],"names":["handler","req","res","method","shopifyClient","Shopify","Clients","Storefront","process","env","SHOPIFY_DOMAIN","SHOPIFY_PUB","CREATE_CART_QUERY","query","data","type","GraphQL","ContentType","JSON","response","status","json","body","cartCreate","cart","console","error","setHeader","end"],"mappings":";;;;;;;AAAA;;;;AAEe,SAAeA,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACRD,GAAG,CAACE,MAAJ,KAAe,MADP;AAAA;AAAA;AAAA;;AAAA;AAGDC,UAAAA,aAHC,GAGe,IAAIC,uBAAQC,OAAR,CAAgBC,UAApB,CAA+BC,OAAO,CAACC,GAAR,CAAYC,cAA3C,EAA2DF,OAAO,CAACC,GAAR,CAAYE,WAAvE,CAHf;AAIDC,UAAAA,iBAJC;AAAA;AAAA,0CAckBR,aAAa,CAACS,KAAd,CAAoB;AACvCC,YAAAA,IAAI,EAAEF,iBADiC;AAEvCG,YAAAA,IAAI,EAAEV,uBAAQC,OAAR,CAAgBU,OAAhB,CAAwBC,WAAxB,CAAoCC;AAFH,WAApB,CAdlB;;AAAA;AAcCC,UAAAA,QAdD;AAmBL;AACAjB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAAQ,CAACG,IAAT,CAAcR,IAAd,CAAmBS,UAAnB,CAA8BC,IAAnD;AApBK;AAAA;;AAAA;AAAA;AAAA;AAsBLC,UAAAA,OAAO,CAACC,KAAR;AACAxB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEK,YAAAA,KAAK,EAAE;AAAT,WAArB;;AAvBK;AAAA;AAAA;;AAAA;AA0BP;AACAxB,UAAAA,GAAG,CAACyB,SAAJ,CAAc,OAAd,EAAuB,MAAvB;AACAzB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBQ,GAAhB,CAAoB,oBAApB;;AA5BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import Shopify from '@shopify/shopify-api';\n\nexport default async function handler(req, res) {\n    if(req.method === 'POST'){\n      try {\n        const shopifyClient = new Shopify.Clients.Storefront(process.env.SHOPIFY_DOMAIN, process.env.SHOPIFY_PUB);\n        const CREATE_CART_QUERY = `\n            mutation {\n            cartCreate(input: {}) {\n                cart {\n                id\n                checkoutUrl\n                }\n            }\n            }\n        `;\n          const response = await shopifyClient.query({\n              data: CREATE_CART_QUERY,\n              type: Shopify.Clients.GraphQL.ContentType.JSON,\n          });\n\n          // Send back the response (cart ID and checkout URL)\n          res.status(200).json(response.body.data.cartCreate.cart);\n      } catch(error){\n          console.error(error);\n          res.status(500).json({ error: 'Error creating cart' });\n      }\n    } else {\n        // Handle any non-POST requests\n        res.setHeader('Allow', 'POST');\n        res.status(405).end('Method Not Allowed');\n    }\n}"],"file":"cart.dev.js"}