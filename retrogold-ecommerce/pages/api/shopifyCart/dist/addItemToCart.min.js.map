{"version":3,"sources":["addItemToCart.js"],"names":["_nodeFetch","_interopRequireDefault","require","handler","req","res","_req$body","cartId","id","quantity","lineItems","response","data","regeneratorRuntime","async","_context","prev","next","method","body","console","log","merchandiseId","awrap","concat","process","env","SHOPIFY_DOMAIN","headers","Content-Type","error","SHOPIFY_PUB","JSON","stringify","query","variables","lines","sent","json","status","t0","setHeader","end","stop"],"mappings":"4FAAA,IAAAA,WAAAC,uBAAAC,QAAA,uFAEe,SAAeC,QAAQC,EAAKC,GAA5B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GACQ,SAAfb,EAAIc,OADG,OAAAH,EAAAC,KAAA,EAAAV,EAG8BF,EAAIe,KAA7BZ,EAHLD,EAGKC,OAAQC,EAHbF,EAGaE,GAAIC,EAHjBH,EAGiBG,SACpBW,QAAQC,IAAIZ,EAAUD,GAEhBE,EAAY,CAAC,CACfY,cAAed,EACfC,SAAUA,IARX,4uDAAAM,EAAAE,KAAA,EAAAJ,mBAAAU,OAuDoB,EAAAvB,WAAA,SAAA,WAAAwB,OAAiBC,QAAQC,IAAIC,eAA7B,6BAAwE,CAvD5FT,OAAA,OAAAU,QAAA,CAAAC,eAAA,mBAuEKC,oCAARL,QAAAC,IAAAK,aACuBD,KAAOE,KAAAC,UAAA,CAA9BC,MAxEG,4uDA+DKC,UAAW,CAAE5B,OAAAA,EAAQ6B,MAAO1B,QA/DjCK,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,OAuDGN,EAvDHI,EAAAsB,KAAAtB,EAAAE,KAAA,GAAAJ,mBAAAU,MAmEgBZ,EAAS2B,QAnEzB,KAAA,GAmEG1B,EAnEHG,EAAAsB,KAAAhC,EAAAkC,OAAA,KAAAD,KAAA1B,GAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,MAAA,GAuEHK,QAAQU,MAARf,EAAAyB,IAvEGnC,EAAAkC,OAAA,KAAAD,KAAA,CAAAR,MAAA,+BAAA,KAAA,GAAAf,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAZ,EAAAoC,UAAA,QAAA,CAAA,SAAApC,EAAAkC,OAAA,KAAAG,IAAA,UAAAlB,OAAApB,EAAAc,OAAA,iBAAA,KAAA,GAAA,IAAA,MAAA,OAAAH,EAAA4B,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"addItemToCart.min.js","sourcesContent":["import fetch from 'node-fetch';\n\nexport default async function handler(req, res) {\n    if (req.method === \"POST\") {\n        try {\n            const { cartId, id, quantity } = req.body;\n            console.log(quantity, id);\n\n            const lineItems = [{\n                merchandiseId: id,\n                quantity: quantity\n            }];\n\n            const query = `\n                mutation addCartLines($cartId: ID!, $lines: [CartLineInput!]!) {\n                    cartLinesAdd(cartId: $cartId, lines: $lines) {\n                        cart {\n                            id\n                            lines(first: 10) {\n                                edges {\n                                    node {\n                                        quantity\n                                        merchandise {\n                                            ... on ProductVariant {\n                                                id\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            cost {\n                                totalAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                subtotalAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                totalTaxAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                totalDutyAmount {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                        }\n                        userErrors {\n                            field\n                            message\n                        }\n                    }\n                }\n            `;\n\n            const response = await fetch(`https://${process.env.SHOPIFY_DOMAIN}/api/2023-10/graphql.json`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Shopify-Storefront-Access-Token': process.env.SHOPIFY_PUB\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: { cartId, lines: lineItems }\n                })\n            })\n\n            const data = await response.json();\n            res.status(200).json(data)\n\n        } catch (error) {\n            console.error(error);\n            res.status(500).json({ error: 'Error adding items to cart' })\n        }\n    } else {\n        res.setHeader('Allow', ['POST']);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}"]}