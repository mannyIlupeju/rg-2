{"version":3,"sources":["fetchCart.js"],"names":["_nodeFetch","_interopRequireDefault","require","handler","req","res","response","cartData","regeneratorRuntime","async","_context","prev","next","method","awrap","concat","process","env","SHOPIFY_DOMAIN","headers","Content-Type","X-Shopify-Storefront-Access-Token","SHOPIFY_PUB","body","JSON","stringify","query","variables","cartId","sent","ok","Error","status","json","console","log","abrupt","props","t0","error","stop"],"mappings":"4FAAA,IAAAA,WAAAC,uBAAAC,QAAA,uFAEe,SAAeC,QAASC,EAAKC,GAA7B,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GACO,SAAfR,EAAIS,OADI,OAAAH,EAAAC,KAAA,EAAA,k9DAAAD,EAAAE,KAAA,EAAAJ,mBAAAM,OAAA,EAAAd,WAAA,SAAA,WAAAe,OAAAC,QAAAC,IAAAC,eAAA,6BAAA,CAAAL,OAAA,OA8ECM,QAAS,CACLC,eAAgB,mBAChBC,oCAAqCL,QAAQC,IAAIK,aAErDC,KAAMC,KAAKC,UAAU,CACjBC,MAnFL,k9DAoFKC,UAAW,CAAEC,OAAAA,aApFlBlB,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,IAAAN,EAAAI,EAAAmB,MAwFWC,GAxFX,CAAApB,EAAAE,KAAA,EAAA,MAAA,MAyFO,IAAImB,MAAJ,uBAAAhB,OAAiCT,EAAS0B,SAzFjD,KAAA,EAAA,OAAAtB,EAAAE,KAAA,GAAAJ,mBAAAM,MA4FoBR,EAAS2B,QA5F7B,KAAA,GAAA,OA4FG1B,EA5FHG,EAAAmB,KA6FHK,QAAQC,IAAI5B,GA7FTG,EAAA0B,OAAA,SA8FI,CACHC,MAAO,CAAE9B,SAAAA,KA/FV,KAAA,GAAA,OAAAG,EAAAC,KAAA,GAAAD,EAAA4B,GAAA5B,EAAA,MAAA,GAkGHwB,QAAQK,MAAM,4BAAd7B,EAAA4B,IAlGG5B,EAAA0B,OAAA,SAmGI,CAAEC,MAAO,CAAE9B,SAAU,QAnGzB,KAAA,GAAA,IAAA,MAAA,OAAAG,EAAA8B,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"fetchCart.min.js","sourcesContent":["import fetch from 'node-fetch';\n\nexport default async function handler (req, res){\n    if(req.method === \"POST\"){\n        try {\n            \n            const query = `\n            query cartQuery($cartId: ID!) {\n              cart(id: $cartId) {\n                id\n                createdAt\n                updatedAt\n                checkoutUrl\n                lines(first: 10) {\n                  edges {\n                    node {\n                      id\n                      quantity\n                      merchandise {\n                        ... on ProductVariant {\n                          id\n                          image {\n                            src\n                            altText\n                          }\n                          priceV2 {\n                            amount\n                            currencyCode\n                          }\n                          product {\n                            vendor\n                            title\n                            handle\n                          }\n                        }\n                      }\n                      attributes {\n                        key\n                        value\n                      }\n                    }\n                  }\n                }\n                attributes {\n                  key\n                  value\n                }\n                cost {\n                  totalAmount {\n                    amount\n                    currencyCode\n                  }\n                  subtotalAmount {\n                    amount\n                    currencyCode\n                  }\n                  totalTaxAmount {\n                    amount\n                    currencyCode\n                  }\n                  totalDutyAmount {\n                    amount\n                    currencyCode\n                  }\n                }\n                buyerIdentity {\n                  email\n                  phone\n                  customer {\n                    id\n                  }\n                  countryCode\n                }\n              }\n            }\n        `;\n            // Replace 'your GraphQL query here' with your actual query.\n\n            const response = await fetch(`https://${process.env.SHOPIFY_DOMAIN}/api/2023-10/graphql.json`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Shopify-Storefront-Access-Token': process.env.SHOPIFY_PUB,\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: { cartId },\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n\n            const cartData = await response.json();\n            console.log(cartData);\n            return {\n                props: { cartData },\n            };\n        } catch (error) {\n            console.error('Error fetching cart data:', error);\n            return { props: { cartData: null } };\n        }\n    }\n}"]}