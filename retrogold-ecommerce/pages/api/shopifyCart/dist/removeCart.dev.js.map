{"version":3,"sources":["removeCart.js"],"names":["handler","req","res","method","body","cartId","lineId","query","process","env","SHOPIFY_DOMAIN","headers","SHOPIFY_PUB","JSON","stringify","variables","lineIds","response","json","data","status","cartLinesAdd","userErrors","length","console","error","setHeader","end"],"mappings":";;;;;;;AAAA;;;;AAEe,SAAeA,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACRD,GAAG,CAACE,MAAJ,KAAe,MADP;AAAA;AAAA;AAAA;;AAAA;AAAA,sBAGsBF,GAAG,CAACG,IAH1B,EAGIC,MAHJ,aAGIA,MAHJ,EAGYC,MAHZ,aAGYA,MAHZ;AAIGC,UAAAA,KAJH;AAAA;AAAA,0CAiDoB,6CAAiBC,OAAO,CAACC,GAAR,CAAYC,cAA7B,gCAAwE;AAC3FP,YAAAA,MAAM,EAAE,MADmF;AAE3FQ,YAAAA,OAAO,EAAE;AACL,8BAAgB,kBADX;AAEL,mDAAqCH,OAAO,CAACC,GAAR,CAAYG;AAF5C,aAFkF;AAM3FR,YAAAA,IAAI,EAAES,IAAI,CAACC,SAAL,CAAe;AACjBP,cAAAA,KAAK,EAALA,KADiB;AAEjBQ,cAAAA,SAAS,EAAE;AAAEV,gBAAAA,MAAM,EAANA,MAAF;AAAUW,gBAAAA,OAAO,EAAEV;AAAnB;AAFM,aAAf;AANqF,WAAxE,CAjDpB;;AAAA;AAiDGW,UAAAA,QAjDH;AAAA;AAAA,0CA6DgBA,QAAQ,CAACC,IAAT,EA7DhB;;AAAA;AA6DGC,UAAAA,IA7DH;AA8DHjB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqBC,IAArB,EA9DG,CAgEH;;AACA,cAAIA,IAAI,CAACA,IAAL,IAAaA,IAAI,CAACA,IAAL,CAAUE,YAAvB,IAAuCF,IAAI,CAACA,IAAL,CAAUE,YAAV,CAAuBC,UAAlE,EAA8E;AAC1E,gBAAIH,IAAI,CAACA,IAAL,CAAUE,YAAV,CAAuBC,UAAvB,CAAkCC,MAAlC,GAA2C,CAA/C,EAAkD;AAC9CC,cAAAA,OAAO,CAACC,KAAR,CAAc,cAAd,EAA8BN,IAAI,CAACA,IAAL,CAAUE,YAAV,CAAuBC,UAArD;AACH;AACJ,WAJD,MAIO;AACHE,YAAAA,OAAO,CAACC,KAAR,CAAc,gCAAd,EAAgDN,IAAhD;AACH;;AAvEE;AAAA;;AAAA;AAAA;AAAA;AAyEHjB,UAAAA,GAAG,CAACwB,SAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB;AACAxB,UAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBO,GAAhB,kBAA8B1B,GAAG,CAACE,MAAlC;;AA1EG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import fetch from 'node-fetch';\n\nexport default async function handler(req, res){\n    if(req.method === \"POST\"){\n        try{\n            const {cartId, lineId} = req.body;\n            const query = `\n            mutation removeCartLines($cartId: ID!, $lineIds: [ID!]!) {\n                cartLinesRemove(cartId: $cartId, lineIds: $lineIds) {\n                    cart {\n                    id\n                    lines(first: 10){\n                        edges\n                        {\n                        node{\n                            quantity\n                            merchandise{\n                            ... on ProductVariant {\n                                id\n                            }\n                            }\n                        }\n                        }\n                    }\n                    cost {\n                        totalAmount {\n                        amount\n                        currencyCode\n                        }\n                        subtotalAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalTaxAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalDutyAmount {\n                        amount\n                        currencyCode\n                        }\n                    }\n                    }\n                    \n                    userErrors {\n                    field\n                    message\n                    }\n            }\n        }`\n        ;\n            const response = await fetch(`https://${process.env.SHOPIFY_DOMAIN}/api/2023-10/graphql.json`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Shopify-Storefront-Access-Token': process.env.SHOPIFY_PUB\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: { cartId, lineIds: lineId}\n                })\n            })\n\n            const data = await response.json();\n            res.status(200).json(data)\n\n            // Check if cartLinesAdd is available and has userErrors\n            if (data.data && data.data.cartLinesAdd && data.data.cartLinesAdd.userErrors) {\n                if (data.data.cartLinesAdd.userErrors.length > 0) {\n                    console.error('User errors:', data.data.cartLinesAdd.userErrors);\n                }\n            } else {\n                console.error('Unexpected response structure:', data);\n            }\n        } catch{\n            res.setHeader('Allow', ['POST']);\n            res.status(405).end(`Method ${req.method} Not Allowed`);\n        }\n    }\n}\n\n"],"file":"removeCart.dev.js"}