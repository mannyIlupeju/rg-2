{"version":3,"sources":["addItemToCart.js"],"names":["handler","req","res","method","body","cartId","lineItems","query","process","env","SHOPIFY_DOMAIN","headers","SHOPIFY_PUB","JSON","stringify","variables","lines","message","response","json","data","status","cartLinesAdd","userErrors","length","console","error","setHeader","end"],"mappings":";;;;;;;AAAA;;;;AAEe,SAAeA,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACPD,GAAG,CAACE,MAAJ,KAAe,MADR;AAAA;AAAA;AAAA;;AAAA;AAAA,sBAG2BF,GAAG,CAACG,IAH/B,EAGKC,MAHL,aAGKA,MAHL,EAGaC,SAHb,aAGaA,SAHb;AAIGC,UAAAA,KAJH;AAAA;AAAA,0CAgDoB,6CAAiBC,OAAO,CAACC,GAAR,CAAYC,cAA7B,gCAAwE;AAC3FP,YAAAA,MAAM,EAAE,MADmF;AAE3FQ,YAAAA,OAAO,EAAE;AACL,8BAAgB,kBADX;AAEL,mDAAqCH,OAAO,CAACC,GAAR,CAAYG;AAF5C,aAFkF;AAM3FR,YAAAA,IAAI,EAAES,IAAI,CAACC,SAAL,CAAe;AACjBP,cAAAA,KAAK,EAALA,KADiB;AAEjBQ,cAAAA,SAAS,EAAE;AAAEV,gBAAAA,MAAM,EAANA,MAAF;AAAUW,gBAAAA,KAAK,EAAEV;AAAjB,eAFM;AAGjBW,cAAAA,OAAO,EAAG;AAHO,aAAf;AANqF,WAAxE,CAhDpB;;AAAA;AAgDGC,UAAAA,QAhDH;AAAA;AAAA,0CA+DgBA,QAAQ,CAACC,IAAT,EA/DhB;;AAAA;AA+DGC,UAAAA,IA/DH;AAgEHlB,UAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqBC,IAArB,EAhEG,CAkEH;;AACA,cAAIA,IAAI,CAACA,IAAL,IAAaA,IAAI,CAACA,IAAL,CAAUE,YAAvB,IAAuCF,IAAI,CAACA,IAAL,CAAUE,YAAV,CAAuBC,UAAlE,EAA8E;AAC1E,gBAAIH,IAAI,CAACA,IAAL,CAAUE,YAAV,CAAuBC,UAAvB,CAAkCC,MAAlC,GAA2C,CAA/C,EAAkD;AAC9CC,cAAAA,OAAO,CAACC,KAAR,CAAc,cAAd,EAA8BN,IAAI,CAACA,IAAL,CAAUE,YAAV,CAAuBC,UAArD;AACH;AACJ,WAJD,MAIO;AACHE,YAAAA,OAAO,CAACC,KAAR,CAAc,gCAAd,EAAgDN,IAAhD;AACH;;AAzEE;AAAA;;AAAA;AAAA;AAAA;AA4EHK,UAAAA,OAAO,CAACC,KAAR;AACAxB,UAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEO,YAAAA,KAAK,EAAE;AAAT,WAArB;;AA7EG;AAAA;AAAA;;AAAA;AAgFPxB,UAAAA,GAAG,CAACyB,SAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB;AACAzB,UAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBO,GAAhB,kBAA8B3B,GAAG,CAACE,MAAlC;;AAjFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import fetch from 'node-fetch';\n\nexport default async function handler(req, res) {\n    if (req.method === \"POST\") {\n        try {\n            const { cartId, lineItems } = req.body;\n            const query = `\n                mutation addCartLines($cartId: ID!, $lines: [CartLineInput!]!) {\n                    cartLinesAdd(cartId: $cartId, lines: $lines) {\n                        cart {\n                            id\n                            lines(first: 10) {\n                                edges {\n                                    node {\n                                        id\n                                        merchandise {\n                                            ... on ProductVariant {\n                                                id\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            cost {\n                                totalAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                subtotalAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                totalTaxAmount {\n                                    amount\n                                    currencyCode\n                                }\n                                totalDutyAmount {\n                                    amount\n                                    currencyCode\n                                }\n                            }\n                        }\n                        userErrors {\n                            field\n                            message\n                        }\n                    }\n                }\n            `;\n\n            const response = await fetch(`https://${process.env.SHOPIFY_DOMAIN}/api/2023-10/graphql.json`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Shopify-Storefront-Access-Token': process.env.SHOPIFY_PUB\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: { cartId, lines: lineItems },\n                    message : \"item added to cart\"\n                })\n            })\n\n            \n            \n            const data = await response.json();\n            res.status(200).json(data)\n\n            // Check if cartLinesAdd is available and has userErrors\n            if (data.data && data.data.cartLinesAdd && data.data.cartLinesAdd.userErrors) {\n                if (data.data.cartLinesAdd.userErrors.length > 0) {\n                    console.error('User errors:', data.data.cartLinesAdd.userErrors);\n                }\n            } else {\n                console.error('Unexpected response structure:', data);\n            }\n\n        } catch (error) {\n            console.error(error);\n            res.status(500).json({ error: 'Error adding items to cart' })\n        }\n    } else {\n        res.setHeader('Allow', ['POST']);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}"],"file":"addItemToCart.dev.js"}