{"version":3,"sources":["cart.js"],"names":["_nodeFetch","_interopRequireDefault","require","handler","req","res","lineItems","response","data","regeneratorRuntime","async","_context","prev","next","method","body","productAdded","merchandiseId","id","quantity","awrap","concat","process","env","SHOPIFY_DOMAIN","headers","Content-Type","error","SHOPIFY_PUB","JSON","stringify","query","variables","cartInput","lines","sent","json","status","setHeader","t0","console","end","stop"],"mappings":"4FAAA,IAAAA,WAAAC,uBAAAC,QAAA,uFAEe,SAAeC,QAAQC,EAAKC,GAA5B,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GACQ,SAAfT,EAAIU,OADG,OAAAH,EAAAC,KAAA,EAGsBR,EAAIW,KAArBC,aAGFV,EAAa,CACfW,cAAeC,GACfC,SAAUA,UARX,07CAAAR,EAAAE,KAAA,EAAAJ,mBAAAW,OA0DoB,EAAApB,WAAA,SAAA,WAAAqB,OAAiBC,QAAQC,IAAIC,eAA7B,6BAAwE,CA1D5FV,OAAA,OAAAW,QAAA,CAAAC,eAAA,mBA2EKC,oCAARL,QAAAC,IAAAK,aACuBD,KAAOE,KAAAC,UAAA,CAA9BC,MA5EG,07CAkEKC,UAAW,CAAEC,UAAW,CAAEC,MAAO5B,SAlEtCK,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,OA0DGN,EA1DHI,EAAAwB,KAAAxB,EAAAE,KAAA,GAAAJ,mBAAAW,MAsEgBb,EAAS6B,QAtEzB,KAAA,GAsEG5B,EAtEHG,EAAAwB,KAAA9B,EAAAgC,OAAA,KAAAD,KAAA5B,GA+EPH,QAAIiC,IAAU9B,GA/EPG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAA4B,GAAA5B,EAAA,MAAA,GAAA6B,QAAAb,MAAAhB,EAAA4B,IAAAlC,EAAAgC,OAAA,KAAAD,KAAA,CAAAT,MAAA,wBAAA,KAAA,GAAAhB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAR,EAAAiC,UAAA,QAAA,CAAA,SAAAjC,EAAAgC,OAAA,KAAAI,IAAA,UAAApB,OAAAjB,EAAAU,OAAA,iBAAA,KAAA,GAAA,IAAA,MAAA,OAAAH,EAAA+B,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"cart.min.js","sourcesContent":["import fetch from 'node-fetch'\n\nexport default async function handler(req, res) {\n    if (req.method === \"POST\") {\n        try {\n            const { productAdded } = req.body; // `variants` is an array of variant IDs\n            \n            // Construct line items using the same quantity for each variant\n            const lineItems = ({\n                merchandiseId: id,\n                quantity: quantity // Using the same quantity for each variant\n            });\n\n            const query = `\n                mutation createCart($cartInput: CartInput) {\n                cartCreate(input: $cartInput) {\n                    cart {\n                    id\n                    createdAt\n                    updatedAt\n                    checkoutUrl\n                    lines(first: 10) {\n                        edges {\n                        node {\n                            id\n                            merchandise {\n                            ... on ProductVariant {\n                                id\n                            }\n                            }\n                        }\n                        }\n                    }\n                    attributes {\n                        key\n                        value\n                    }\n                    cost {\n                        totalAmount {\n                        amount\n                        currencyCode\n                        }\n                        subtotalAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalTaxAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalDutyAmount {\n                        amount\n                        currencyCode\n                        }\n                    }\n                    }\n                }\n                }\n            `;\n\n            const response = await fetch(`https://${process.env.SHOPIFY_DOMAIN}/api/2023-10/graphql.json`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Shopify-Storefront-Access-Token': process.env.SHOPIFY_PUB\n                },\n                body: JSON.stringify({\n                    query,\n                    variables: { cartInput: { lines: lineItems } }\n                })\n            })\n\n            const data = await response.json();\n            res.status(200).json(data)\n            console.log(data);\n\n        } catch (error) {\n            console.error(error);\n            res.status(500).json({ error: 'Error creating cart' })\n        }\n    } else {\n        res.setHeader('Allow', ['POST']);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}        "]}