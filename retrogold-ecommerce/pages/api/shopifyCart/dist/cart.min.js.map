{"version":3,"sources":["cart.js"],"names":["_shopifyApi","_interopRequireDefault","require","handler","req","res","shopifyClient","response","regeneratorRuntime","async","_context","prev","next","method","Shopify","Clients","Storefront","process","env","SHOPIFY_DOMAIN","SHOPIFY_PUB","awrap","query","data","type","GraphQL","ContentType","JSON","sent","status","json","body","cartCreate","cart","t0","CREATE_CART_QUERY","error","setHeader","end","stop"],"mappings":"4FAAA,IAAAA,YAAAC,uBAAAC,QAAA,iGAEe,SAAeC,QAAQC,EAAKC,GAA5B,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GACO,SAAfR,EAAIS,OADI,OAAAH,EAAAC,KAAA,EAGDL,EAAgB,IAAIQ,YAAAA,QAAQC,QAAQC,WAAWC,QAAQC,IAAIC,eAAgBF,QAAQC,IAAIE,aAHtF,oMAAAV,EAAAE,KAAA,EAAAJ,mBAAAa,MAAAf,EAAAgB,MAAA,CAAAC,KAAA,oMAAAC,KAAAV,YAAAA,QAAAC,QAAAU,QAAAC,YAAAC,QAAAjB,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAL,EAAAG,EAAAkB,KAAAvB,EAAAwB,OAAA,KAAAC,KAAAvB,EAAAwB,KAAAR,KAAAS,WAAAC,MAAAvB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAwB,GAAAxB,EAAA,MAAA,GAIDyB,QAAAA,MAAAA,EAAAA,IAJC9B,EAAAwB,OAAA,KAAAC,KAAA,CAAAM,MAAA,wBAAA,KAAA,GAAA1B,EAAAE,KAAA,GAAA,MAAA,KAAA,GAcsCP,EAdtCgC,UAAA,QAAA,QA4BPhC,EAAIwB,OAAO,KAAKS,IAAI,sBA5Bb,KAAA,GAAA,IAAA,MAAA,OAAA5B,EAAA6B,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"cart.min.js","sourcesContent":["import Shopify from '@shopify/shopify-api';\n\nexport default async function handler(req, res) {\n    if(req.method === 'POST'){\n      try {\n        const shopifyClient = new Shopify.Clients.Storefront(process.env.SHOPIFY_DOMAIN, process.env.SHOPIFY_PUB);\n        const CREATE_CART_QUERY = `\n            mutation {\n            cartCreate(input: {}) {\n                cart {\n                id\n                checkoutUrl\n                }\n            }\n            }\n        `;\n          const response = await shopifyClient.query({\n              data: CREATE_CART_QUERY,\n              type: Shopify.Clients.GraphQL.ContentType.JSON,\n          });\n\n          // Send back the response (cart ID and checkout URL)\n          res.status(200).json(response.body.data.cartCreate.cart);\n      } catch(error){\n          console.error(error);\n          res.status(500).json({ error: 'Error creating cart' });\n      }\n    } else {\n        // Handle any non-POST requests\n        res.setHeader('Allow', 'POST');\n        res.status(405).end('Method Not Allowed');\n    }\n}"]}