{"version":3,"sources":["cart.js"],"names":["_nodeFetch","_interopRequireDefault","require","handler","req","res","_req$body","quantity","id","lineItems","response","data","regeneratorRuntime","async","_context","prev","next","method","body","price","console","log","merchandiseId","awrap","concat","process","env","SHOPIFY_DOMAIN","headers","Content-Type","X-Shopify-Storefront-Access-Token","SHOPIFY_PUB","setHeader","stringify","query","variables","sent","json","status","t0","error","end","stop"],"mappings":"4FAAA,IAAAA,WAAAC,uBAAAC,QAAA,uFAKe,SAAeC,QAAQC,EAAKC,GAA5B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GACO,SAAfZ,EAAIa,OADI,OAAAH,EAAAC,KAAA,EAAAT,EAG2BF,EAAIc,KAA3BX,EAHJD,EAGIC,SAAUC,EAHdF,EAGcE,GAHdF,EAGkBa,MACrBC,QAAQC,IAAId,EAAUC,GAJIJ,EAAvB,CAAA,CAAAkB,cAAAd,EAQCD,SAAUA,IARX,07CAAAO,EAAAE,KAAA,EAAAJ,mBAAAW,OA2DoB,EAAAvB,WAAA,SAAA,WAAAwB,OAAiBC,QAAQC,IAAIC,eAA7B,6BAAwE,CA3D5FV,OAAA,OAAAW,QAAA,CAAAC,eAAA,mBA+DKC,oCAAqCL,QAAQC,IAAIK,aAgBzDC,KAAAA,KAAUC,UAAU,CACxBC,MAhFO,07CAmEKC,UAAW,CAAC1B,UAAAA,QAnEjBK,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,OA2DGN,EA3DHI,EAAAsB,KAAAtB,EAAAE,KAAA,GAAAJ,mBAAAW,MAAAb,EAAA2B,QAAA,KAAA,GAAA1B,EAAAG,EAAAsB,KAAA/B,EAAAiC,OAAA,KAAAD,KAAA1B,GAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,MAAA,GA2EHM,QAAQoB,MAAR1B,EAAAyB,IACAlC,EAAIiC,OAAO,KAAKD,KAAK,CAACG,MAAO,wBA5E1B,KAAA,GAAA1B,EAAAE,KAAA,GAAA,MAAA,KAAA,GA+EPX,EAAI2B,UAAU,QAAS,CAAC,SACxB3B,EAAIiC,OAAO,KAAKG,IAAhB,UAAAjB,OAA8BpB,EAAIa,OAAlC,iBAhFO,KAAA,GAAA,IAAA,MAAA,OAAAH,EAAA4B,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"cart.min.js","sourcesContent":["import fetch from 'node-fetch'\n\n\n\n\nexport default async function handler(req, res) {\n    if(req.method === \"POST\"){ \n        try {\n            const {quantity, id, price} = req.body;\n            console.log(quantity, id);\n            \n            const lineItems = [{\n                merchandiseId: id,\n                quantity: quantity\n                \n            }];\n\n            const query = `\n                mutation createCart($cartInput: CartInput) {\n                cartCreate(input: $cartInput) {\n                    cart {\n                    id\n                    createdAt\n                    updatedAt\n                    checkoutUrl\n                    lines(first: 10) {\n                        edges {\n                        node {\n                            id\n                            merchandise {\n                            ... on ProductVariant {\n                                id\n                            }\n                            }\n                        }\n                        }\n                    }\n                    attributes {\n                        key\n                        value\n                    }\n                    cost {\n                        totalAmount {\n                        amount\n                        currencyCode\n                        }\n                        subtotalAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalTaxAmount {\n                        amount\n                        currencyCode\n                        }\n                        totalDutyAmount {\n                        amount\n                        currencyCode\n                        }\n                    }\n                    }\n                }\n                }\n            `;\n\n            const response = await fetch(`https://${process.env.SHOPIFY_DOMAIN}/api/2023-10/graphql.json`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Shopify-Storefront-Access-Token': process.env.SHOPIFY_PUB\n                },\n                body: JSON.stringify({\n                    query, \n                    variables: {lineItems}\n                })\n            })\n\n            const data = await response.json();\n            res.status(200).json(data)\n\n        } catch (error) {\n            console.error (error);\n            res.status(500).json({error: 'Error creating cart'})\n        }\n    } else {\n        res.setHeader('Allow', ['POST']);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}        \n"]}