"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=handler;var _nodeFetch=_interopRequireDefault(require("node-fetch"));function _interopRequireDefault(n){return n&&n.__esModule?n:{default:n}}function handler(e,n){var t,r;return regeneratorRuntime.async(function(n){for(;;)switch(n.prev=n.next){case 0:if("POST"===e.method)return n.prev=1,"\n            query cartQuery($cartId: ID!) {\n              cart(id: $cartId) {\n                id\n                createdAt\n                updatedAt\n                checkoutUrl\n                lines(first: 10) {\n                  edges {\n                    node {\n                      id\n                      quantity\n                      merchandise {\n                        ... on ProductVariant {\n                          id\n                          image {\n                            src\n                            altText\n                          }\n                          priceV2 {\n                            amount\n                            currencyCode\n                          }\n                          product {\n                            vendor\n                            title\n                            handle\n                          }\n                        }\n                      }\n                      attributes {\n                        key\n                        value\n                      }\n                    }\n                  }\n                }\n                attributes {\n                  key\n                  value\n                }\n                cost {\n                  totalAmount {\n                    amount\n                    currencyCode\n                  }\n                  subtotalAmount {\n                    amount\n                    currencyCode\n                  }\n                  totalTaxAmount {\n                    amount\n                    currencyCode\n                  }\n                  totalDutyAmount {\n                    amount\n                    currencyCode\n                  }\n                }\n                buyerIdentity {\n                  email\n                  phone\n                  customer {\n                    id\n                  }\n                  countryCode\n                }\n              }\n            }\n        ",n.next=5,regeneratorRuntime.awrap((0,_nodeFetch.default)("https://".concat(process.env.SHOPIFY_DOMAIN,"/api/2023-10/graphql.json"),{method:"POST",headers:{"Content-Type":"application/json","X-Shopify-Storefront-Access-Token":process.env.SHOPIFY_PUB},body:JSON.stringify({query:"\n            query cartQuery($cartId: ID!) {\n              cart(id: $cartId) {\n                id\n                createdAt\n                updatedAt\n                checkoutUrl\n                lines(first: 10) {\n                  edges {\n                    node {\n                      id\n                      quantity\n                      merchandise {\n                        ... on ProductVariant {\n                          id\n                          image {\n                            src\n                            altText\n                          }\n                          priceV2 {\n                            amount\n                            currencyCode\n                          }\n                          product {\n                            vendor\n                            title\n                            handle\n                          }\n                        }\n                      }\n                      attributes {\n                        key\n                        value\n                      }\n                    }\n                  }\n                }\n                attributes {\n                  key\n                  value\n                }\n                cost {\n                  totalAmount {\n                    amount\n                    currencyCode\n                  }\n                  subtotalAmount {\n                    amount\n                    currencyCode\n                  }\n                  totalTaxAmount {\n                    amount\n                    currencyCode\n                  }\n                  totalDutyAmount {\n                    amount\n                    currencyCode\n                  }\n                }\n                buyerIdentity {\n                  email\n                  phone\n                  customer {\n                    id\n                  }\n                  countryCode\n                }\n              }\n            }\n        ",variables:{cartId:cartId}})}));n.next=19;break;case 5:if((t=n.sent).ok){n.next=8;break}throw new Error("HTTP error! Status: ".concat(t.status));case 8:return n.next=10,regeneratorRuntime.awrap(t.json());case 10:return r=n.sent,console.log(r),n.abrupt("return",{props:{cartData:r}});case 15:return n.prev=15,n.t0=n.catch(1),console.error("Error fetching cart data:",n.t0),n.abrupt("return",{props:{cartData:null}});case 19:case"end":return n.stop()}},null,null,[[1,15]])}
//# sourceMappingURL=fetchCart.min.js.map
