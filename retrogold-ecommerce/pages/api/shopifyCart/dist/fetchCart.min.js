"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=handler;var _nodeFetch=_interopRequireDefault(require("node-fetch")),_cookie=_interopRequireDefault(require("cookie"));function _interopRequireDefault(n){return n&&n.__esModule?n:{default:n}}function handler(e,t){var r,a,o,u;return regeneratorRuntime.async(function(n){for(;;)switch(n.prev=n.next){case 0:if("POST"!==e.method)return t.setHeader("Allow",["POST"]),n.abrupt("return",t.status(405).end("Method ".concat(e.method," Not Allowed")));n.next=3;break;case 3:return r=_cookie.default.parse(e.headers.cookie||""),(a=r.cartId)||t.status(505).json({message:"No cart Id sent"}),n.prev=6,"\n            query cartQuery($cartId: ID!) {\n            cart(id: $cartId) {\n                id\n                createdAt\n                updatedAt\n                checkoutUrl\n                lines(first: 10) {\n                edges {\n                    node {\n                    id\n                    quantity\n                    merchandise {\n                        ... on ProductVariant {\n                        id\n                         image {\n                         src\n                         altText\n                         }\n                        }\n                    }\n                    attributes {\n                        key\n                        value\n                    }\n                    }\n                }\n                }\n                attributes {\n                key\n                value\n                }\n                cost {\n                totalAmount {\n                    amount\n                    currencyCode\n                }\n                subtotalAmount {\n                    amount\n                    currencyCode\n                }\n                totalTaxAmount {\n                    amount\n                    currencyCode\n                }\n                totalDutyAmount {\n                    amount\n                    currencyCode\n                }\n                }\n                buyerIdentity {\n                email\n                phone\n                customer {\n                    id\n                }\n                countryCode\n                }\n            }\n        }\n        ",n.next=10,regeneratorRuntime.awrap((0,_nodeFetch.default)("".concat(process.env.SHOPIFY_DOMAIN,"/api/2023-10/graphql.json"),{method:"POST",headers:{"Content-Type":"application/json","X-Shopify-Storefront-Access-Token":process.env.SHOPIFY_PUB},body:JSON.stringify({query:"\n            query cartQuery($cartId: ID!) {\n            cart(id: $cartId) {\n                id\n                createdAt\n                updatedAt\n                checkoutUrl\n                lines(first: 10) {\n                edges {\n                    node {\n                    id\n                    quantity\n                    merchandise {\n                        ... on ProductVariant {\n                        id\n                         image {\n                         src\n                         altText\n                         }\n                        }\n                    }\n                    attributes {\n                        key\n                        value\n                    }\n                    }\n                }\n                }\n                attributes {\n                key\n                value\n                }\n                cost {\n                totalAmount {\n                    amount\n                    currencyCode\n                }\n                subtotalAmount {\n                    amount\n                    currencyCode\n                }\n                totalTaxAmount {\n                    amount\n                    currencyCode\n                }\n                totalDutyAmount {\n                    amount\n                    currencyCode\n                }\n                }\n                buyerIdentity {\n                email\n                phone\n                customer {\n                    id\n                }\n                countryCode\n                }\n            }\n        }\n        ",variables:{cartId:a}})}));case 10:return o=n.sent,n.next=13,regeneratorRuntime.awrap(o.json());case 13:u=n.sent,t.status(200).json(u),n.next=21;break;case 17:return n.prev=17,n.t0=n.catch(6),console.error(n.t0),n.abrupt("return",t.status(500).json({message:"Error fetching Cart"}));case 21:case"end":return n.stop()}},null,null,[[6,17]])}
//# sourceMappingURL=fetchCart.min.js.map
