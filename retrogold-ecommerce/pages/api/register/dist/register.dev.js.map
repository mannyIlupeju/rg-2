{"version":3,"sources":["register.js"],"names":["dotenv","config","verificationCode","transporter","nodemailer","createTransport","service","auth","user","process","env","EMAIL_USERNAME","pass","EMAIL_PASSWORD","handler","req","res","method","console","log","body","email","name","password","retype","status","json","message","userEmail","toLowerCase","trim","usersname","test","bcrypt","hash","hashedPassword","User","findOne","existingUser","success","create","role","sendVerificationEmail","data","error","sendMail","from","to","subject","text","html"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGAA,mBAAOC,MAAP;;AAEA,IAAMC,gBAAgB,GAAG,eAAzB;;AAEA,IAAMC,WAAW,GAAGC,uBAAWC,eAAX,CAA2B;AAC7CC,EAAAA,OAAO,EAAE,OADoC;AAE7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,cADd;AAEJC,IAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFd;AAFuC,CAA3B,CAApB;;AAQA;;AAIA,SAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACMD,GAAG,CAACE,MAAJ,KAAe,MADrB;AAAA;AAAA;AAAA;;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AAFJ,sBAG8CL,GAAG,CAACK,IAHlD,EAGYC,KAHZ,aAGYA,KAHZ,EAGmBC,IAHnB,aAGmBA,IAHnB,EAGyBC,QAHzB,aAGyBA,QAHzB,EAGmCC,MAHnC,aAGmCA,MAHnC;;AAAA,gBAMQ,CAACF,IAAD,IAAS,OAAOA,IAAP,KAAgB,QANjC;AAAA;AAAA;AAAA;;AAAA,2CAOaN,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAArB,CAPb;;AAAA;AAUUC,UAAAA,SAVV,GAUsBP,KAAK,CAACQ,WAAN,GAAoBC,IAApB,EAVtB;AAWUC,UAAAA,SAXV,GAWsBT,IAAI,CAACO,WAAL,GAAmBC,IAAnB,EAXtB;;AAAA,gBAeQ,CAACF,SAAD,IAAc,CAAC,6BAA6BI,IAA7B,CAAkCJ,SAAlC,CAfvB;AAAA;AAAA;AAAA;;AAAA,2CAgBaZ,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAArB,CAhBb;;AAAA;AAAA,gBAmBQJ,QAAQ,KAAKC,MAnBrB;AAAA;AAAA;AAAA;;AAAA,2CAoBaR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAArB,CApBb;;AAAA;AAAA;AAAA,0CAuBiCM,qBAAOC,IAAP,CAAYX,QAAZ,EAAsB,EAAtB,CAvBjC;;AAAA;AAuBUY,UAAAA,cAvBV;AAAA;AAAA;AAAA,0CA4BiCC,iBAAKC,OAAL,CAAa;AAAEhB,YAAAA,KAAK,EAAEO;AAAT,WAAb,CA5BjC;;AAAA;AA4BYU,UAAAA,YA5BZ;;AAAA,eA6BUA,YA7BV;AAAA;AAAA;AAAA;;AAAA,2CA8BetB,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEa,YAAAA,OAAO,EAAE,KAAX;AAAkBZ,YAAAA,OAAO,EAAE;AAA3B,WAArB,CA9Bf;;AAAA;AAAA;AAAA,0CAiCyBS,iBAAKI,MAAL,CAAY;AAAElB,YAAAA,IAAI,EAACS,SAAP;AAAkBV,YAAAA,KAAK,EAALA,KAAlB;AAAyBE,YAAAA,QAAQ,EAAEY,cAAnC;AAAmDM,YAAAA,IAAI,EAAE;AAAzD,WAAZ,CAjCzB;;AAAA;AAiCYjC,UAAAA,IAjCZ;AAmCMU,UAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAnCN;AAAA,0CAqCYkC,qBAAqB,CAACd,SAAD,EAAY1B,gBAAZ,CArCjC;;AAAA;AAuCMc,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEa,YAAAA,OAAO,EAAE,IAAX;AAAiBI,YAAAA,IAAI,EAAEnC,IAAvB;AAA6BmB,YAAAA,OAAO,EAAE;AAAtC,WAArB;AAvCN;AAAA;;AAAA;AAAA;AAAA;AAyCMX,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE,kBAAX;AAA+BiB,YAAAA,KAAK,EAAE,YAAMjB;AAA5C,WAArB;;AAzCN;AAAA;AAAA;;AAAA;AA4CIX,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEa,YAAAA,OAAO,EAAE,KAAX;AAAkBZ,YAAAA,OAAO,EAAE;AAA3B,WAArB;;AA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgDA,SAAee,qBAAf,CAAqCrB,KAArC,EAA4CnB,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEUC,WAAW,CAAC0C,QAAZ,CAAqB;AACzBC,YAAAA,IAAI,EAAE,uCADmB;AAEzBC,YAAAA,EAAE,EAAE1B,KAFqB;AAGzB2B,YAAAA,OAAO,EAAE,mBAHgB;AAIzBC,YAAAA,IAAI,qGAA8F/C,gBAA9F,CAJqB;AAKzBgD,YAAAA,IAAI,wHAAgHhD,gBAAhH;AALqB,WAArB,CAFV;;AAAA;AASIgB,UAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AATJ;AAAA;;AAAA;AAAA;AAAA;AAWID,UAAAA,OAAO,CAAC0B,KAAR,CAAc,mCAAd;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;eAmBe9B,O","sourcesContent":["import { MongoClient } from 'mongodb'\nimport bcrypt from 'bcryptjs';\nimport nodemailer from 'nodemailer'\nimport User from '../../../models/User';\nimport connectDB from '../../../lib/mongoose'\nimport { v4 as uuidv4 } from 'uuid';\nimport dotenv from 'dotenv';\n\n\ndotenv.config()\n\nconst verificationCode = uuidv4();\n\nconst transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: process.env.EMAIL_USERNAME,\n    pass: process.env.EMAIL_PASSWORD,\n  },\n});\n\nconnectDB();\n\n\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    console.log(req.body)\n    const { email, name, password, retype } = req.body;\n    \n\n    if (!name || typeof name !== 'string') {\n      return res.status(422).json({ message: 'Please provide a valid name' });\n    }\n\n    const userEmail = email.toLowerCase().trim();\n    const usersname = name.toLowerCase().trim();\n\n  \n\n    if (!userEmail || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(userEmail)) {\n      return res.status(422).json({ message: 'Please enter a correct email address' });\n    }\n\n    if (password !== retype) {\n      return res.status(422).json({ message: 'Passwords do not match' });\n    }\n\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n\n\n    try {\n      const existingUser = await User.findOne({ email: userEmail });\n      if (existingUser) {\n        return res.status(400).json({ success: false, message: 'User already exists' });\n      }\n\n      const user = await User.create({ name:usersname, email, password: hashedPassword, role: 'user' });\n\n      console.log(user)\n\n      await sendVerificationEmail(userEmail, verificationCode);\n\n      res.status(201).json({ success: true, data: user, message: 'Signed up! A verification email has been sent to your email address' });\n    } catch (error) {\n      res.status(500).json({ message: 'User not created', error: error.message });\n    }\n  } else {\n    res.status(405).json({ success: false, message: 'Method not allowed' })\n  }\n}\n\nasync function sendVerificationEmail(email, verificationCode) {\n  try {\n    await transporter.sendMail({\n      from: '\"Retrogold\" <pelumiilupeju@gmail.com>',\n      to: email,\n      subject: 'Verify Your Email',\n      text: `Please click the link below to verify your email:\\nhttp://your-app.com/verify-email?code=${verificationCode}`,\n      html: `<b>Please click the link below to verify your email:</b><br><a href=\"http://your-app.com/verify-email?code=${verificationCode}\">Verify Email</a>`,\n    });\n    console.log('Verification email sent successfully');\n  } catch (error) {\n    console.error('Error sending verification email:', error);\n  }\n}\n\n\n\n\n\nexport default handler;"],"file":"register.dev.js"}