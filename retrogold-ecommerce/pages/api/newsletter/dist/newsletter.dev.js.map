{"version":3,"sources":["newsletter.js"],"names":["require","config","client","createClient","MongoClient","connect","process","env","NEXT_MONGODB_URI","handler","req","res","method","email","body","userEmail","toLowerCase","includes","status","json","message","db","collection","findOne","existingEmail","insertOne","close"],"mappings":";;;;;;;AAAA;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGA,IAAIC,MAAJ,C,CAEA;AACA;AACA;;AAEA,SAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cACMD,MADN;AAAA;AAAA;AAAA;;AAAA;AAAA,0CAEmBE,qBAAYC,OAAZ,CAAoBC,OAAO,CAACC,GAAR,CAAYC,gBAAhC,CAFnB;;AAAA;AAEIN,UAAAA,MAFJ;;AAAA;AAAA,2CAISA,MAJT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAeO,OAAf,CAAwBC,GAAxB,EAA6BC,GAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACKD,GAAG,CAACE,MAAJ,KAAe,MADpB;AAAA;AAAA;AAAA;;AAEUC,UAAAA,KAFV,GAEkBH,GAAG,CAACI,IAAJ,CAASD,KAF3B;AAGUE,UAAAA,SAHV,GAGsBF,KAAK,CAACG,WAAN,EAHtB;;AAAA,gBAMO,CAACD,SAAD,IAAc,CAACA,SAAS,CAACE,QAAV,CAAmB,GAAnB,CAAf,IAA0CF,SAAS,KAAK,EAN/D;AAAA;AAAA;AAAA;;AAAA,4CAOaJ,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAE;AAAV,WAArB,CAPb;;AAAA;AAAA;AAAA;AAAA,0CAY2BjB,YAAY,EAZvC;;AAAA;AAYYD,UAAAA,OAZZ;AAaYmB,UAAAA,EAbZ,GAaiBnB,OAAM,CAACmB,EAAP,EAbjB,EAeM;;AAfN;AAAA,0CAgBkCA,EAAE,CAACC,UAAH,CAAc,YAAd,EAA4BC,OAA5B,CAAoC;AAACV,YAAAA,KAAK,EAAEE;AAAR,WAApC,CAhBlC;;AAAA;AAgBYS,UAAAA,aAhBZ;;AAAA,eAiBSA,aAjBT;AAAA;AAAA;AAAA;;AAAA,4CAkBeb,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAC;AAAT,WAArB,CAlBf;;AAAA;AAAA;AAAA,0CAsBYC,EAAE,CAACC,UAAH,CAAc,YAAd,EAA4BG,SAA5B,CAAsC;AAACZ,YAAAA,KAAK,EAAEE;AAAR,WAAtC,CAtBZ;;AAAA;AAwBMb,UAAAA,OAAM,CAACwB,KAAP;;AAEAf,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAE;AAAV,WAArB;AA1BN;AAAA;;AAAA;AAAA;AAAA;AA4BMT,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAE;AAAV,WAArB;;AA5BN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;eAoCeX,O","sourcesContent":["import {MongoClient} from 'mongodb'\nrequire('dotenv').config()\n\n\nlet client;\n\n//TODO: \n//Create a functionality that sends USER a discount code for their orders. \n//checks if user already exists and if so does not send a discount code. \n\nasync function createClient() {\n  if(!client){\n    client = await MongoClient.connect(process.env.NEXT_MONGODB_URI)\n  }\n  return client;\n}\n\n\n\nasync function handler (req, res){\n  if(req.method === 'POST'){\n    const email = req.body.email\n    const userEmail = email.toLowerCase()\n   \n    \n    if(!userEmail || !userEmail.includes('@') || userEmail === ''){\n      return res.status(422).json({message: 'Please enter a correct email address'})\n    }\n\n\n    try {\n      const client = await createClient();\n      const db = client.db();\n\n      //check if email already exists before inserting it in \n      const existingEmail = await db.collection('newsletter').findOne({email: userEmail})\n      if(existingEmail) {\n        return res.status(400).json({message:'This Email already exists'});\n      }\n      \n      //save email within the collection.\n      await db.collection('newsletter').insertOne({email: userEmail}) \n\n      client.close();\n\n      res.status(201).json({message: 'Signed up!'})\n    } catch(error) {\n      res.status(500).json({message: 'Internal server error'})\n    }\n  }\n\n  \n\n}\n\nexport default handler;"],"file":"newsletter.dev.js"}