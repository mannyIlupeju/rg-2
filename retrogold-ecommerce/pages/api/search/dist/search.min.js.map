{"version":3,"sources":["search.js"],"names":["_apiUtil","require","handler","req","res","userSearch","sanityResults","shopifyResults","combinedResults","regeneratorRuntime","async","_context","prev","next","method","status","end","abrupt","body","json","error","awrap","searchSanity","sent","searchShopify","concat","_toConsumableArray","t0","console","log","stop"],"mappings":"2FAAA,IAAAA,SAAAC,QAAA,ueAEA,SAAeC,QAAQC,EAAKC,GAA5B,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GACqB,SAAfV,EAAIW,OADV,OAEMV,EAAIW,OAAO,KAAKC,MAFtBL,EAAAM,OAAA,UAAAN,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,GAAAF,EAAAC,KAAA,EAOYP,EAAaF,EAAIe,KAAKb,WAPlC,CAAAM,EAAAE,KAAA,EAAA,MAAA,OAUQT,EAAIW,OAAO,KAAKI,KAAK,CAAEC,MAAO,4BAVtCT,EAAAM,OAAA,UAAA,KAAA,EAAA,OAAAN,EAAAE,KAAA,GAAAJ,mBAAAY,OAckC,EAAArB,SAAAsB,cAAajB,IAd/C,KAAA,GAAA,OAcYC,EAdZK,EAAAY,KAAAZ,EAAAE,KAAA,GAAAJ,mBAAAY,OAAA,EAAArB,SAAAwB,eAAAnB,IAAA,KAAA,GAAeH,EAAfS,EAAAY,MAAAjB,GAAAC,KAAAC,EAAA,GAAAiB,OAAAC,mBAAApB,GAAAoB,mBAAAnB,IAAAH,EAAAW,OAAA,KAAAI,KAAAX,IAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,MAAA,GAAAiB,QAAAC,IAAA,2BAAAlB,EAAAgB,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAhB,EAAAmB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,mBA2Be5B","file":"search.min.js","sourcesContent":["import { searchSanity, searchShopify } from '@/helpers/api-util';\n\nasync function handler(req, res) {\n  if (req.method !== \"POST\") {\n      res.status(405).end(); // Method Not Allowed\n      return;\n  }\n\n    try{\n      const userSearch = req.body.userSearch; // Assuming you're passing search as a query parameter\n      \n      if (!userSearch) {\n        res.status(400).json({ error: 'Search query is missing' });\n        return;\n      }\n      \n      const sanityResults = await searchSanity(userSearch);\n      const shopifyResults = await searchShopify(userSearch);\n      \n      \n      if(sanityResults || shopifyResults){\n        const combinedResults = [...sanityResults, ...shopifyResults]\n        res.status(200).json(combinedResults);\n      }\n    }catch(error){\n      console.log('Error fetching response:', error)\n    }\n}\n\nexport default handler;\n"]}