import Head from 'next/head'
import Navigation from '@/components/Shared/Navigation'
import { sanityClient, urlFor} from '@/lib/dist/sanity.dev'
import PortableTextComponent from '@/components/Shared/PortableTextComponent'
import Footer from '@/components/Shared/Footer/footer'





const blogImage = {
  width: '580px',
  height: '100px',
}










const blogPost = ({data}) => {
  const{blogDetail} = data
  const post = blogDetail.post
 


  return (
    <>
    <Head>
        <title>Retrogold Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
    </Head>
    <Navigation/>
    <main>
      <div className="text-zinc-100 md:px-60 bg-white p-14">
        <div className="text-zinc-700 mb-12">
        <h1 className="text-4xl font-semibold mb-2">{blogDetail.title}</h1>
        <span className="text-sm">Written by: {blogDetail.author.name}</span>
        </div>

        <figure className="mt-3" >
          <img src= {urlFor(blogDetail.main_image.asset._ref)} alt=" " className="image-Style"/>
        </figure>

        <article className="text-zinc-700 mt-4 leading-loose">
          
          <PortableTextComponent detail={blogDetail} />
          
        </article>

      </div>
    </main>
    <Footer/>
    </>
  )

}

export default blogPost

const paramQuery = `*[_type == "blog" && defined(slug.current)]{
  "params": {
    "slug": slug.current
  }
}`

const blogDetailQuery = `*[_type == 'blog' && slug.current == $slug][0] {
    title,
    main_image,
    tag, 
    author->, 
    description[],
    post,
    slug,
    _createdAt,
}`


export async function getStaticPaths() {
  const paths = await sanityClient.fetch(paramQuery)

   return {
    paths,
    fallback: false,
  }
 
}


export async function getStaticProps({params}) {
  const {slug} = params
  const blogDetail = await sanityClient.fetch(blogDetailQuery, {slug})


  return {
    props: {
      data: {blogDetail}
    }
  }
}