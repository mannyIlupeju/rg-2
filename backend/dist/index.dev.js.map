{"version":3,"sources":["index.js"],"names":["express","require","app","mongoose","cors","bodyParser","dotenv","config","use","json","limit","extended","urlencoded","PORT","process","env","connect","CONNECTION_URL","useNewUrlParser","useUnifiedTopology","then","listen","console","log","error","set"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,QAAD,CAAP,CAAkBM,MAAlB,EAAf,C,CAEA;;;AACAL,GAAG,CAACM,GAAJ,CAAQH,UAAU,CAACI,IAAX,CAAgB;AAACC,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAAhB,CAAR;AACAT,GAAG,CAACM,GAAJ,CAAQH,UAAU,CAACO,UAAX,CAAsB;AAACF,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,QAAQ,EAAC;AAAzB,CAAtB,CAAR;AAEAT,GAAG,CAACM,GAAJ,CAAQJ,IAAI,EAAZ;AAEA,IAAMS,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAV,QAAQ,CAACa,OAAT,CAAiBF,OAAO,CAACC,GAAR,CAAYE,cAA7B,EAA6C;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAC;AAA5C,CAA7C,EACCC,IADD,CACM;AAAA,SAAKlB,GAAG,CAACmB,MAAJ,CAAWR,IAAX,EAAiB,YAAI;AAC9BS,IAAAA,OAAO,CAACC,GAAR,4CAAgDV,IAAhD;AACD,GAFU,CAAL;AAAA,CADN,WAIO,UAACW,KAAD;AAAA,SAASF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAT;AAAA,CAJP;AAMArB,QAAQ,CAACsB,GAAT,gBAA4B,KAA5B","sourcesContent":["const express = require('express')\nconst app = express()\nconst mongoose = require('mongoose')\nconst cors = require('cors')\nconst bodyParser = require('body-parser')\nconst dotenv = require(\"dotenv\").config()\n\n//setting up the body parser\napp.use(bodyParser.json({limit: \"30mb\", extended: true}))\napp.use(bodyParser.urlencoded({limit: \"30mb\", extended:true}))\n\napp.use(cors())\n\nconst PORT = process.env.PORT || 8080 \n\nmongoose.connect(process.env.CONNECTION_URL, { useNewUrlParser: true, useUnifiedTopology:true })\n.then(()=> app.listen(PORT, ()=>{\n  console.log(`Server is up and running in port ${PORT}`)\n}))\n.catch((error)=>console.log(error))\n\nmongoose.set(`strictQuery`, false)"],"file":"index.dev.js"}